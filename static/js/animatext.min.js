!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).animatext=f()}}(function(){return function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){return o(e[i][1][r]||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(require,module,exports){"use strict";var _randomMinMax=function(min,max){return Math.floor(Math.random()*(max-min))+min},_genVelocity=function(from,to,numOfSteps){var myNoise=_randomMinMax(1,30),time=Math.max(numOfSteps-myNoise,1);return Math.abs(from-to)/time},_toAscii=function(char){return char?char.charCodeAt(0):null};module.exports=function(text,newText){var interval=2<arguments.length&&void 0!==arguments[2]?arguments[2]:50,duration=3<arguments.length&&void 0!==arguments[3]?arguments[3]:3e3,cb=4<arguments.length?arguments[4]:void 0,stepLengthReminder=0,stepList=[],numOfSteps=duration/interval,currentStep=0,stepLength=Math.abs(newText.length-text.length)/numOfSteps,from=text,to=newText;newText.length<text.length&&(from=newText,to=text),from.split("").forEach(function(v,idx){var fromAscii=_toAscii(from[idx]),targetAscii=_toAscii(to[idx]);stepList.push(_genVelocity(fromAscii,targetAscii,numOfSteps))});var splittedText=text.split(""),splittedTextAscii=splittedText.map(function(v){return v.charCodeAt(0)}),myInterval=setInterval(function(){if(splittedText.length>newText.length){var tempStepLength=stepLength+stepLengthReminder;splittedText=splittedText.slice(0,splittedText.length-Math.floor(tempStepLength)),stepLengthReminder=tempStepLength%1}else if(splittedText.length<newText.length){for(var _tempStepLength=stepLength+stepLengthReminder,i=0;i<Math.floor(_tempStepLength);i++){var randomAscii=_randomMinMax(65,123),myAscii=_toAscii(newText[splittedText.length]);stepList.push(_genVelocity(randomAscii,myAscii,numOfSteps-currentStep)),splittedText.push(String.fromCharCode(randomAscii)),splittedTextAscii.push(randomAscii)}stepLengthReminder=_tempStepLength%1}splittedText.forEach(function(c,idx){if(c!=newText[idx])if(stepList[idx]){var asciiText=splittedTextAscii[idx],nextAscii=newText.charCodeAt(idx)<asciiText?asciiText-stepList[idx]:asciiText+stepList[idx];splittedTextAscii[idx]=nextAscii,splittedText[idx]=String.fromCharCode(Math.round(nextAscii))}else splittedText[idx]=String.fromCharCode(_randomMinMax(65,123))});var result={text:splittedText.join(""),done:!1};splittedText.join("")===newText&&(clearInterval(myInterval),result.done=!0),currentStep++,cb(result)},interval)}},{}]},{},[1])(1)});